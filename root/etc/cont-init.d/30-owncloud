#!/usr/bin/with-contenv bash

##
# Script to install owncloud to the webroot
##

STAGE="[INIT-STAGE2][OWNCLOUD-INSTALL]"
WEBROOT="/var/www/html"
OCDIR="owncloud"
OCPATH="${WEBROOT}/${OCDIR}"
DATADIR="/data"
CONFIGDIR="/config/owncloud/config"
EXTAPPS="/apps"
UPDATERDIR="/updater"

# owncloud flags
# INSTALL (false) - flag to indicate whether owncloud has already been INSTALLED
# VERSION - string to compare installed vs latest owncloud version
# UPDATE (false)- flag to indicate that the owncloud installation should be upgraded
# CONFIG (false)- flag to indicate that a pre-exisiting owncloud config.php file is available
INSTALL=1
VERSION=0
UPDATE=1
CONFIG=1
DOWNLOADED=1
EXTRACTED=1

function download {
  s6-echo "${STAGE} downloading owncloud-${OWNCLOUD_VERSION}.tar.bz2..."

  # cd to the /tmp directory and download the owncloud tar.bz2
  cd /tmp/ && { curl -O https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2; }
  ##  https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.md5; cd -; }

  # check whether the download succeeded
  if [ -e /tmp/owncloud-${OWNCLOUD_VERSION}.tar.bz2 ]; then
    s6-echo "${STAGE} owncloud-${OWNCLOUD_VERSION}.tar.bz2 downloaded"
    DOWNLOADED=0
  else
    s6-echo "${STAGE} owncloud-${OWNCLOUD_VERSION}.tar.bz2 download failed...exiting"
  fi

  return ${DOWNLOADED}
}

function extract {
  # extract the owncloud tar.bz2 file

  s6-echo "${STAGE} extracting owncloud-${OWNCLOUD_VERSION}.tar.bz2..."
  cd /tmp && tar -xjf owncloud-${OWNCLOUD_VERSION}.tar.bz2

  # confirm the owncloud-x-y-z.tar.bz2 has been extracted
  if [ -d /tmp/owncloud ]; then
    s6-echo "${STAGE} owncloud-${OWNCLOUD_VERSION}.tar.bz2 extracted"
    EXTRACTED=0
  else
    s6-echo "${STAGE} owncloud-${OWNCLOUD_VERSION}.tar.bz2 extraction failed...exiting"
  fi

  return ${EXTRACTED}
}

function move_owncloud() {
  mv /tmp/owncloud ${WEBROOT}
}

function check_owncloud_install() {
  s6-echo "${STAGE} checking for config.php..."

  if [ -e ${CONFIGDIR}/config.php ]; then
    CONFIG=0
    s6-echo "${STAGE} config.php FOUND"
  else
    s6-echo "${STAGE} config.php NOT FOUND"
    CONFIG=1
  fi

  return ${CONFIG}
}

function check_owncloud_version() {
  s6-echo "${STAGE} checking for owncloud installation..."

  if check_owncloud_install ; then
    if [ s6-grep "'installed' => true" ]; then
      s6-echo "${STAGE} previous installation of owncloud FOUND"
      INSTALL=0
    else
      s6-echo "${STAGE} previous installation of owncloud NOT FOUND"
      INSTALL=1
  fi

  return ${INSTALL}
}

fuction check_update_required() {
  s6-echo "checking installed version..."

  VERSION=s6-grep "'version'" ${CONFIGDIR}/config.php | s6-cut -d"'" -f4

  s6-echo "installed version: ${VERSION}"

  if [ ${VERSION} == ${OWNCLOUD_VERSION} ]; then
    s6-echo "${STAGE} config.php indicates you are running the current version of owncloud!"
    UPDATE=1
  else
    UPDATE=0
  fi

  return ${UPDATE}
}

function install() {
  s6-echo "${STAGE} fresh install"
  mv /tmp/owncloud/config/* ${CONFIGDIR}/
  s6-rmrf -R /tmp/owncloud/config

  mv * /tmp/owncloud/ ${OCPATH}

  s6-ln -snf ${CONFIGDIR} ${OCPATH}/config
  s6-ln -snf ${EXTAPPS} ${OCPATH}/apps_external

  chown -R www-data:www-data ${OCPATH}
}

s6-echo "${STAGE} checking for config.php..."

if [ -e ${CONFIGDIR}/config.php ]; then
  CONFIG=0
  s6-echo "${STAGE} config.php found...scanning"

  VERSION=s6-grep "'version'" ${CONFIGDIR}/config.php | s6-cut -d"'" -f4

  if [ s6-grep "'installed' => true" ]; then
    INSTALL=0

    if [ ${VERSION} == ${OWNCLOUD_VERSION} ]; then
      s6-echo "${STAGE} config.php indicates you are running the current version of owncloud!"
    else
      UPDATE=0
    fi
  fi
fi

if

if check_owncloud_install == 1 ; then # check_owncloud_install returns false - no previous installation of owncloud
  if download == 1 ; then
    s6-echo "${STAGE} install failed...exiting"
    exit 127
  else
    if extracted == 1 ; then
      s6-echo "${STAGE} install failed...exiting"
      exit 127
    else
      




if download ; then
  if extract ; then
    s6-echo "${STAGE} installing owncloud-${OWNCLOUD_VERSION}..."

    if [ ${INSTALL} == 1 ] && [ ${CONFIG} == 1 ]; then
      s6-echo "${STAGE} fresh install"
      mv /tmp/owncloud/config/* ${CONFIGDIR}/
      s6-rmrf -R /tmp/owncloud/config

      mv * /tmp/owncloud/ ${OCPATH}

      s6-ln -snf ${CONFIGDIR} ${OCPATH}/config
      s6-ln -snf ${EXTAPPS} ${OCPATH}/apps_external

      chown -R www-data:www-data ${OCPATH}
    elif [ ${INSTALL} == 0 ] && [ ${CONFIG} == 1 ]; then
      s6-echo "${STAGE} fresh install with existing config"
      mv /tmp/owncloud/config/* ${CONFIGDIR}/
      s6-rmrf -R /tmp/.owncloud/config

      mv * /tmp/owncloud/ ${OCPATH}

      s6-ln -snf ${CONFIGDIR} ${OCPATH}/config
      s6-ln -snf ${EXTAPPS} ${OCPATH}/apps_external

      chown -R www-data:www-data ${OCPATH}
    elif [ ${INSTALL} == 1 ] && [ ${CONFIG} == 0 ]; then
      s6-echo "${STAGE} 1"
      s6-rmrf -R /tmp/owncloud/config

      mv * /tmp/owncloud/ ${OCPATH}

      s6-ln -snf ${CONFIGDIR} ${OCPATH}/config
      s6-ln -snf ${EXTAPPS} ${OCPATH}/apps_external

      chown -R www-data:www-data ${OCPATH}
    elif [ ${UPDATE} == 0 ]; then
      s6-echo "${STAGE} Please ensure that your DATA and CONFIG directories and DATABASE have been backed up!"

      maintenance_mode=grep "\'maintenance\'" ${CONFIGDIR}/config.php | cut -d"'" -f4
      if [  maintenance_mode == false ]; then
        s6-echo "${STAGE} Please place your server into maintenance mode: -u www-data php ${OCPATH}/occ maintenance:mode --on"
      else
        s6-rmrf -R /tmp/owncloud/config

        mv ${OCPATH} ${WEBROOT}/owncloud_old
        mv * /tmp/owncloud/ ${OCPATH}

        s6-ln -snf ${CONFIGDIR} ${OCPATH}/config
        s6-ln -snf ${EXTAPPS} ${OCPATH}/apps_external

        chown -R www-data:www-data ${OCPATH}

        s6-echo "${STAGE} Please run the following command from your docker interface: docker exec owncloud \/bin\/sh -c \"sudo -u www-data php ${OCPATH}\/occ upgrade"
      fi
    fi
  else
    exit 127
  fi
else
  exit 127
fi
